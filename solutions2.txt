1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.`name`, `students`.`surname`, `degrees`.`name`
FROM `students`
JOIN `degrees`
ON `degrees`.`id` = `students`.`id`
WHERE `degrees`.`name` = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze 

SELECT `degrees`.name, `departments`.name
FROM `degrees`
JOIN `departments`
ON `department_id`  = `departments`.`id`
WHERE `departments`.name = 'Dipartimento di Neuroscienze' 
AND `degrees`.level = 'magistrale';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT `courses`.`name`, `teachers`.`name`, `teachers`.`surname`
FROM `courses`
JOIN `course_teacher`
ON `course_id` = `courses`.id
JOIN `teachers`
ON `teacher_id` = `teachers`.id
WHERE `teacher_id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

SELECT `students`.name, `students`.surname, `students`.`registration_number`, `degrees`.*, `departments`.`name`
FROM  `students`
JOIN `degrees`
ON `degrees`.id = `degree_id`
JOIN `departments`
ON `departments`.id = `department_id`
ORDER BY `students`.surname, `students`.name;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.id, `degrees`.name, `teachers`.name, `teachers`.surname, `teachers`.id, `courses`.name, `courses`.id 
FROM `degrees`
JOIN `courses` ON `degrees`.id = `degree_id`
JOIN `course_teacher` ON `course_id` = `courses`.id
JOIN `teachers` ON `teacher_id`= `teachers`.id
ORDER BY `degrees`.id;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

SELECT `teachers`.name, `teachers`.surname, `teachers`.id, `departments`.name 
FROM `teachers`
JOIN `course_teacher` ON `teacher_id` = `teachers`.id 
JOIN `courses`ON `course_id` = `courses`.id 
JOIN `degrees` ON `degree_id` = `degrees`.id 
JOIN `departments`ON `department_id` = `departments`.id 
WHERE `departments`.name = 'Dipartimento di Matematica';

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.

SELECT students.name, students.surname, students.registration_number, exam_student.exam_id, COUNT(exam_student.exam_id) AS exam_count, MAX(exam_student.vote) AS max_vote
FROM students
JOIN exam_student ON students.id = exam_student.student_id
JOIN exams ON exam_student.exam_id = exams.id
GROUP BY students.id, exam_student.exam_id
HAVING MAX(exam_student.vote) >= 18;




